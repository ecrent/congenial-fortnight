name: CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      # PostgreSQL service instead of MongoDB
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        # Health check to ensure service is ready
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        # Removing cache option since there's no lock file
        
    - name: Install dependencies
      run: |
        npm install
        
    - name: Set up environment variables
      run: |
        echo "NODE_ENV=test" >> $GITHUB_ENV
        echo "DB_HOST=localhost" >> $GITHUB_ENV
        echo "DB_PORT=5432" >> $GITHUB_ENV
        echo "DB_USER=postgres" >> $GITHUB_ENV
        echo "DB_PASSWORD=postgres" >> $GITHUB_ENV
        echo "DB_NAME=test_db" >> $GITHUB_ENV
        
    - name: Initialize database schema
      run: |
        PGPASSWORD=postgres psql -h localhost -U postgres -d test_db -f server/db/test_schema.sql
        
    - name: Build
      run: npm run build --if-present
      
    - name: Run server tests
      run: npm run test:server
      env:
        CI: true
        
    - name: Install Cypress dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth
      
    - name: Create test users in database
      run: |
        PGPASSWORD=postgres psql -h localhost -U postgres -d test_db -c "INSERT INTO users(name, email, password, role) VALUES ('testuser', 'test@example.com', 'password123', 'user'), ('admin', 'admin@example.com', 'adminpassword', 'admin') ON CONFLICT (name) DO NOTHING;"
      
    - name: Run client tests with Xvfb
      run: |
        cd client
        xvfb-run --auto-servernum --server-args='-screen 0 1280x720x24' npm run test:e2e:ci
      env:
        CI: true
